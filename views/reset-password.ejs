<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        /* Custom styles */
        .container {
            max-width: 400px;
            margin: 0 auto;
            padding-top: 50px;
        }
        .btn-submit {
            margin-top: 20px;
        }
        .error-message {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2 class="mb-3">Reset Password</h2>
        <form id="resetPasswordForm" action="/api/auth/reset-password/<%= token %>" method="post">
            <div class="form-group">
                <label for="password">New Password:</label>
                <input type="password" id="password" name="password" class="form-control" required>
                <small class="error-message" id="passwordError"></small> <!-- Error message for password validation -->
            </div>
            <div class="form-group">
                <label for="confirmPassword">Confirm Password:</label>
                <input type="password" id="confirmPassword" name="confirmPassword" class="form-control" required>
                <small class="error-message" id="confirmPasswordError"></small> <!-- Error message for confirm password validation -->
            </div>
            <button type="submit" class="btn btn-primary btn-submit">Reset Password</button>
        </form>

        <div id="successPopup" class="alert alert-success mt-3" style="display: none;">
            Password reset successfully!
        </div>
    </div>

    <!-- Bootstrap JS and dependencies (optional) -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        // Function to show the success popup
        function showSuccessPopup() {
            document.getElementById('successPopup').style.display = 'block';
        }

        // Function to reset form fields
        function resetForm() {
            document.getElementById('resetPasswordForm').reset();
        }

        // Function to validate password
        function validatePassword(password) {
            // Password validation regex
            const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d{2})(?=.*[!@#$%^])[A-Za-z\d!@#$%^]{8,30}$/;
            return passwordRegex.test(password);
        }

        // Submit form event listener
        document.getElementById('resetPasswordForm').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent form submission

            // Validate password
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const passwordError = document.getElementById('passwordError');
            const confirmPasswordError = document.getElementById('confirmPasswordError');

            // Reset previous error messages
            passwordError.textContent = '';
            confirmPasswordError.textContent = '';

            // Validate password
            if (!validatePassword(password)) {
                passwordError.textContent = 'Password must be at least 8 characters long and contain at least 2 numbers, one uppercase letter, one lowercase letter, and one special character.';
                return;
            }

            // Validate password and confirmation password match
            if (password !== confirmPassword) {
                confirmPasswordError.textContent = 'Password and confirmation password do not match.';
                return;
            }

            // If validations pass, submit the form using fetch API or AJAX
            fetch(this.action, {
                method: this.method,
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    password: password
                })
            })
            .then(response => {
                if (response.ok) {
                    // Password reset successful, show success popup and reset form
                    showSuccessPopup();
                    resetForm();
                } else {
                    // Password reset failed, show error popup with status message
                    response.json().then(data => {
                        alert(data.error.message)
                        // Handle other response statuses if needed
                        console.error('Password reset failed:', data.error.message);
                    });
                }
            })
            .catch(error => {
                // Handle network errors
                console.error('Password reset failed:', error);
            });
        });
    </script>
</body>
</html>
